{"ast":null,"code":"import _regeneratorRuntime from \"/home/garrett/Documents/2225-website/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/garrett/Documents/2225-website/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/home/garrett/Documents/2225-website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/garrett/Documents/2225-website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/garrett/Documents/2225-website/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/garrett/Documents/2225-website/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/garrett/Documents/2225-website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/garrett/Documents/2225-website/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/garrett/Documents/2225-website/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/garrett/Documents/2225-website/src/Form/Form.js\";\nimport React, { Component } from 'react';\nimport { Container, Col, Form, FormGroup, Label, Input, Button, FormText, FormFeedback } from 'reactstrap';\n\nvar ContactForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactForm, _Component);\n\n  function ContactForm(props) {\n    var _this;\n\n    _classCallCheck(this, ContactForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactForm).call(this, props));\n\n    _this.handleChange =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var target, value, name;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                target = event.target;\n                value = target.type === 'checkbox' ? target.checked : target.value;\n                name = target.name;\n                _context.next = 5;\n                return _this.setState(_defineProperty({}, name, value));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      'email': '',\n      'password': '',\n      validate: {\n        emailState: ''\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ContactForm, [{\n    key: \"validateEmail\",\n    value: function validateEmail(e) {\n      var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      var validate = this.state.validate;\n\n      if (emailRex.test(e.target.value)) {\n        validate.emailState = 'has-success';\n      } else {\n        validate.emailState = 'has-danger';\n      }\n\n      this.setState({\n        validate: validate\n      });\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(e) {\n      e.preventDefault();\n      console.log(\"Email: \".concat(this.state.email));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      return React.createElement(Container, {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(Form, {\n        className: \"form\",\n        onSubmit: function onSubmit(e) {\n          return _this2.submitForm(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"exampleEmail\",\n        placeholder: \"myemail@email.com\",\n        value: email,\n        valid: this.state.validate.emailState === 'has-success',\n        invalid: this.state.validate.emailState === 'has-danger',\n        onChange: function onChange(e) {\n          _this2.validateEmail(e);\n\n          _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        valid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"That's a tasty looking email you've got there.\"), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Uh oh! Looks like there is an issue with your email. Please input a correct email.\"), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Your username is most likely your email.\"))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"********\",\n        value: password,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return ContactForm;\n}(Component);\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/garrett/Documents/2225-website/src/Form/Form.js"],"names":["React","Component","Container","Col","Form","FormGroup","Label","Input","Button","FormText","FormFeedback","ContactForm","props","handleChange","event","target","value","type","checked","name","setState","state","validate","emailState","bind","e","emailRex","test","preventDefault","console","log","email","password","submitForm","validateEmail"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Container, Col, Form,\n  FormGroup, Label, Input,\n  Button, FormText, FormFeedback,\n} from 'reactstrap';\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n      'email': '',\n      'password': '',\n      validate: {\n        emailState: '',\n      },\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  validateEmail(e) {\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const { validate } = this.state\n      if (emailRex.test(e.target.value)) {\n        validate.emailState = 'has-success'\n      } else {\n        validate.emailState = 'has-danger'\n      }\n      this.setState({ validate })\n    }\n\n  handleChange = async (event) => {\n    const { target } = event;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const { name } = target;\n    await this.setState({\n      [ name ]: value,\n    });\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    console.log(`Email: ${ this.state.email }`)\n  }\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <Container className=\"App\">\n        <h2>Sign In</h2>\n        <Form className=\"form\" onSubmit={ (e) => this.submitForm(e) }>\n          <Col>\n            <FormGroup>\n              <Label>Username</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"exampleEmail\"\n                placeholder=\"myemail@email.com\"\n                value={ email }\n                valid={ this.state.validate.emailState === 'has-success' }\n                invalid={ this.state.validate.emailState === 'has-danger' }\n                onChange={ (e) => {\n                            this.validateEmail(e)\n                            this.handleChange(e)\n                          } }\n              />\n              <FormFeedback valid>\n                That's a tasty looking email you've got there.\n              </FormFeedback>\n              <FormFeedback>\n                Uh oh! Looks like there is an issue with your email. Please input a correct email.\n              </FormFeedback>\n              <FormText>Your username is most likely your email.</FormText>\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"examplePassword\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"examplePassword\"\n                placeholder=\"********\"\n                value={ password }\n                onChange={ (e) => this.handleChange(e) }\n            />\n            </FormGroup>\n          </Col>\n          <Button>Submit</Button>\n      </Form>\n      </Container>\n    );\n  }\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}